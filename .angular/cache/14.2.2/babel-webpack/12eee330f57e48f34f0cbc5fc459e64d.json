{"ast":null,"code":"import _toConsumableArray from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\nexport function zip() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var resultSelector = popResultSelector(args);\n  var sources = argsOrArgArray(args);\n  return sources.length ? new Observable(function (subscriber) {\n    var buffers = sources.map(function () {\n      return [];\n    });\n    var completed = sources.map(function () {\n      return false;\n    });\n    subscriber.add(function () {\n      buffers = completed = null;\n    });\n\n    var _loop = function _loop(sourceIndex) {\n      innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n        buffers[sourceIndex].push(value);\n\n        if (buffers.every(function (buffer) {\n          return buffer.length;\n        })) {\n          var result = buffers.map(function (buffer) {\n            return buffer.shift();\n          });\n          subscriber.next(resultSelector ? resultSelector.apply(void 0, _toConsumableArray(result)) : result);\n\n          if (buffers.some(function (buffer, i) {\n            return !buffer.length && completed[i];\n          })) {\n            subscriber.complete();\n          }\n        }\n      }, function () {\n        completed[sourceIndex] = true;\n        !buffers[sourceIndex].length && subscriber.complete();\n      }));\n    };\n\n    for (var sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n      _loop(sourceIndex);\n    }\n\n    return function () {\n      buffers = completed = null;\n    };\n  }) : EMPTY;\n}","map":{"version":3,"names":["Observable","innerFrom","argsOrArgArray","EMPTY","createOperatorSubscriber","popResultSelector","zip","args","resultSelector","sources","length","subscriber","buffers","map","completed","add","sourceIndex","subscribe","value","push","every","buffer","result","shift","next","some","i","complete","closed"],"sources":["C:/minhas-receitas/node_modules/rxjs/dist/esm/internal/observable/zip.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\nexport function zip(...args) {\n    const resultSelector = popResultSelector(args);\n    const sources = argsOrArgArray(args);\n    return sources.length\n        ? new Observable((subscriber) => {\n            let buffers = sources.map(() => []);\n            let completed = sources.map(() => false);\n            subscriber.add(() => {\n                buffers = completed = null;\n            });\n            for (let sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n                innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                    buffers[sourceIndex].push(value);\n                    if (buffers.every((buffer) => buffer.length)) {\n                        const result = buffers.map((buffer) => buffer.shift());\n                        subscriber.next(resultSelector ? resultSelector(...result) : result);\n                        if (buffers.some((buffer, i) => !buffer.length && completed[i])) {\n                            subscriber.complete();\n                        }\n                    }\n                }, () => {\n                    completed[sourceIndex] = true;\n                    !buffers[sourceIndex].length && subscriber.complete();\n                }));\n            }\n            return () => {\n                buffers = completed = null;\n            };\n        })\n        : EMPTY;\n}\n"],"mappings":";AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,wBAAT,QAAyC,iCAAzC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAO,SAASC,GAAT,GAAsB;EAAA,kCAANC,IAAM;IAANA,IAAM;EAAA;;EACzB,IAAMC,cAAc,GAAGH,iBAAiB,CAACE,IAAD,CAAxC;EACA,IAAME,OAAO,GAAGP,cAAc,CAACK,IAAD,CAA9B;EACA,OAAOE,OAAO,CAACC,MAAR,GACD,IAAIV,UAAJ,CAAe,UAACW,UAAD,EAAgB;IAC7B,IAAIC,OAAO,GAAGH,OAAO,CAACI,GAAR,CAAY;MAAA,OAAM,EAAN;IAAA,CAAZ,CAAd;IACA,IAAIC,SAAS,GAAGL,OAAO,CAACI,GAAR,CAAY;MAAA,OAAM,KAAN;IAAA,CAAZ,CAAhB;IACAF,UAAU,CAACI,GAAX,CAAe,YAAM;MACjBH,OAAO,GAAGE,SAAS,GAAG,IAAtB;IACH,CAFD;;IAH6B,2BAMpBE,WANoB;MAOzBf,SAAS,CAACQ,OAAO,CAACO,WAAD,CAAR,CAAT,CAAgCC,SAAhC,CAA0Cb,wBAAwB,CAACO,UAAD,EAAa,UAACO,KAAD,EAAW;QACtFN,OAAO,CAACI,WAAD,CAAP,CAAqBG,IAArB,CAA0BD,KAA1B;;QACA,IAAIN,OAAO,CAACQ,KAAR,CAAc,UAACC,MAAD;UAAA,OAAYA,MAAM,CAACX,MAAnB;QAAA,CAAd,CAAJ,EAA8C;UAC1C,IAAMY,MAAM,GAAGV,OAAO,CAACC,GAAR,CAAY,UAACQ,MAAD;YAAA,OAAYA,MAAM,CAACE,KAAP,EAAZ;UAAA,CAAZ,CAAf;UACAZ,UAAU,CAACa,IAAX,CAAgBhB,cAAc,GAAGA,cAAc,MAAd,4BAAkBc,MAAlB,EAAH,GAA+BA,MAA7D;;UACA,IAAIV,OAAO,CAACa,IAAR,CAAa,UAACJ,MAAD,EAASK,CAAT;YAAA,OAAe,CAACL,MAAM,CAACX,MAAR,IAAkBI,SAAS,CAACY,CAAD,CAA1C;UAAA,CAAb,CAAJ,EAAiE;YAC7Df,UAAU,CAACgB,QAAX;UACH;QACJ;MACJ,CATiE,EAS/D,YAAM;QACLb,SAAS,CAACE,WAAD,CAAT,GAAyB,IAAzB;QACA,CAACJ,OAAO,CAACI,WAAD,CAAP,CAAqBN,MAAtB,IAAgCC,UAAU,CAACgB,QAAX,EAAhC;MACH,CAZiE,CAAlE;IAPyB;;IAM7B,KAAK,IAAIX,WAAW,GAAG,CAAvB,EAA0B,CAACL,UAAU,CAACiB,MAAZ,IAAsBZ,WAAW,GAAGP,OAAO,CAACC,MAAtE,EAA8EM,WAAW,EAAzF,EAA6F;MAAA,MAApFA,WAAoF;IAc5F;;IACD,OAAO,YAAM;MACTJ,OAAO,GAAGE,SAAS,GAAG,IAAtB;IACH,CAFD;EAGH,CAxBC,CADC,GA0BDX,KA1BN;AA2BH"},"metadata":{},"sourceType":"module"}