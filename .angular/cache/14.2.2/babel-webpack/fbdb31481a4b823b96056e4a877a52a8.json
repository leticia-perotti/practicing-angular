{"ast":null,"code":"import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\nexport function retry() {\n  var configOrCount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n  var config;\n\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount\n    };\n  }\n\n  var _config = config,\n      _config$count = _config.count,\n      count = _config$count === void 0 ? Infinity : _config$count,\n      delay = _config.delay,\n      _config$resetOnSucces = _config.resetOnSuccess,\n      resetOnSuccess = _config$resetOnSucces === void 0 ? false : _config$resetOnSucces;\n  return count <= 0 ? identity : operate(function (source, subscriber) {\n    var soFar = 0;\n    var innerSub;\n\n    var subscribeForRetry = function subscribeForRetry() {\n      var syncUnsub = false;\n      innerSub = source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n        if (resetOnSuccess) {\n          soFar = 0;\n        }\n\n        subscriber.next(value);\n      }, undefined, function (err) {\n        if (soFar++ < count) {\n          var resub = function resub() {\n            if (innerSub) {\n              innerSub.unsubscribe();\n              innerSub = null;\n              subscribeForRetry();\n            } else {\n              syncUnsub = true;\n            }\n          };\n\n          if (delay != null) {\n            var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n            var notifierSubscriber = createOperatorSubscriber(subscriber, function () {\n              notifierSubscriber.unsubscribe();\n              resub();\n            }, function () {\n              subscriber.complete();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            resub();\n          }\n        } else {\n          subscriber.error(err);\n        }\n      }));\n\n      if (syncUnsub) {\n        innerSub.unsubscribe();\n        innerSub = null;\n        subscribeForRetry();\n      }\n    };\n\n    subscribeForRetry();\n  });\n}","map":{"version":3,"names":["operate","createOperatorSubscriber","identity","timer","innerFrom","retry","configOrCount","Infinity","config","count","delay","resetOnSuccess","source","subscriber","soFar","innerSub","subscribeForRetry","syncUnsub","subscribe","value","next","undefined","err","resub","unsubscribe","notifier","notifierSubscriber","complete","error"],"sources":["C:/minhas-receitas/node_modules/rxjs/dist/esm/internal/operators/retry.js"],"sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\nexport function retry(configOrCount = Infinity) {\n    let config;\n    if (configOrCount && typeof configOrCount === 'object') {\n        config = configOrCount;\n    }\n    else {\n        config = {\n            count: configOrCount,\n        };\n    }\n    const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n    return count <= 0\n        ? identity\n        : operate((source, subscriber) => {\n            let soFar = 0;\n            let innerSub;\n            const subscribeForRetry = () => {\n                let syncUnsub = false;\n                innerSub = source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                    if (resetOnSuccess) {\n                        soFar = 0;\n                    }\n                    subscriber.next(value);\n                }, undefined, (err) => {\n                    if (soFar++ < count) {\n                        const resub = () => {\n                            if (innerSub) {\n                                innerSub.unsubscribe();\n                                innerSub = null;\n                                subscribeForRetry();\n                            }\n                            else {\n                                syncUnsub = true;\n                            }\n                        };\n                        if (delay != null) {\n                            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n                                notifierSubscriber.unsubscribe();\n                                resub();\n                            }, () => {\n                                subscriber.complete();\n                            });\n                            notifier.subscribe(notifierSubscriber);\n                        }\n                        else {\n                            resub();\n                        }\n                    }\n                    else {\n                        subscriber.error(err);\n                    }\n                }));\n                if (syncUnsub) {\n                    innerSub.unsubscribe();\n                    innerSub = null;\n                    subscribeForRetry();\n                }\n            };\n            subscribeForRetry();\n        });\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAO,SAASC,KAAT,GAAyC;EAAA,IAA1BC,aAA0B,uEAAVC,QAAU;EAC5C,IAAIC,MAAJ;;EACA,IAAIF,aAAa,IAAI,OAAOA,aAAP,KAAyB,QAA9C,EAAwD;IACpDE,MAAM,GAAGF,aAAT;EACH,CAFD,MAGK;IACDE,MAAM,GAAG;MACLC,KAAK,EAAEH;IADF,CAAT;EAGH;;EACD,cAA4EE,MAA5E;EAAA,4BAAQC,KAAR;EAAA,IAAQA,KAAR,8BAAgBF,QAAhB;EAAA,IAA0BG,KAA1B,WAA0BA,KAA1B;EAAA,oCAAiCC,cAAjC;EAAA,IAAiDA,cAAjD,sCAAkE,KAAlE;EACA,OAAOF,KAAK,IAAI,CAAT,GACDP,QADC,GAEDF,OAAO,CAAC,UAACY,MAAD,EAASC,UAAT,EAAwB;IAC9B,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,QAAJ;;IACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;MAC5B,IAAIC,SAAS,GAAG,KAAhB;MACAF,QAAQ,GAAGH,MAAM,CAACM,SAAP,CAAiBjB,wBAAwB,CAACY,UAAD,EAAa,UAACM,KAAD,EAAW;QACxE,IAAIR,cAAJ,EAAoB;UAChBG,KAAK,GAAG,CAAR;QACH;;QACDD,UAAU,CAACO,IAAX,CAAgBD,KAAhB;MACH,CALmD,EAKjDE,SALiD,EAKtC,UAACC,GAAD,EAAS;QACnB,IAAIR,KAAK,KAAKL,KAAd,EAAqB;UACjB,IAAMc,KAAK,GAAG,SAARA,KAAQ,GAAM;YAChB,IAAIR,QAAJ,EAAc;cACVA,QAAQ,CAACS,WAAT;cACAT,QAAQ,GAAG,IAAX;cACAC,iBAAiB;YACpB,CAJD,MAKK;cACDC,SAAS,GAAG,IAAZ;YACH;UACJ,CATD;;UAUA,IAAIP,KAAK,IAAI,IAAb,EAAmB;YACf,IAAMe,QAAQ,GAAG,OAAOf,KAAP,KAAiB,QAAjB,GAA4BP,KAAK,CAACO,KAAD,CAAjC,GAA2CN,SAAS,CAACM,KAAK,CAACY,GAAD,EAAMR,KAAN,CAAN,CAArE;YACA,IAAMY,kBAAkB,GAAGzB,wBAAwB,CAACY,UAAD,EAAa,YAAM;cAClEa,kBAAkB,CAACF,WAAnB;cACAD,KAAK;YACR,CAHkD,EAGhD,YAAM;cACLV,UAAU,CAACc,QAAX;YACH,CALkD,CAAnD;YAMAF,QAAQ,CAACP,SAAT,CAAmBQ,kBAAnB;UACH,CATD,MAUK;YACDH,KAAK;UACR;QACJ,CAxBD,MAyBK;UACDV,UAAU,CAACe,KAAX,CAAiBN,GAAjB;QACH;MACJ,CAlCmD,CAAzC,CAAX;;MAmCA,IAAIL,SAAJ,EAAe;QACXF,QAAQ,CAACS,WAAT;QACAT,QAAQ,GAAG,IAAX;QACAC,iBAAiB;MACpB;IACJ,CA1CD;;IA2CAA,iBAAiB;EACpB,CA/CQ,CAFb;AAkDH"},"metadata":{},"sourceType":"module"}