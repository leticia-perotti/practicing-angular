{"ast":null,"code":"import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function windowTime(windowTimeSpan) {\n  var _a, _b;\n\n  for (var _len = arguments.length, otherArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherArgs[_key - 1] = arguments[_key];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxWindowSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var windowRecords = [];\n    var restartOnClose = false;\n\n    var closeWindow = function closeWindow(record) {\n      var window = record.window,\n          subs = record.subs;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    var startWindow = function startWindow() {\n      if (windowRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var window = new Subject();\n        var record = {\n          window: window,\n          subs: subs,\n          seen: 0\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, function () {\n          return closeWindow(record);\n        }, windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    var loop = function loop(cb) {\n      return windowRecords.slice().forEach(cb);\n    };\n\n    var terminate = function terminate(cb) {\n      loop(function (_ref) {\n        var window = _ref.window;\n        return cb(window);\n      });\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      loop(function (record) {\n        record.window.next(value);\n        maxWindowSize <= ++record.seen && closeWindow(record);\n      });\n    }, function () {\n      return terminate(function (consumer) {\n        return consumer.complete();\n      });\n    }, function (err) {\n      return terminate(function (consumer) {\n        return consumer.error(err);\n      });\n    }));\n    return function () {\n      windowRecords = null;\n    };\n  });\n}","map":{"version":3,"names":["Subject","asyncScheduler","Subscription","operate","createOperatorSubscriber","arrRemove","popScheduler","executeSchedule","windowTime","windowTimeSpan","_a","_b","otherArgs","scheduler","windowCreationInterval","maxWindowSize","Infinity","source","subscriber","windowRecords","restartOnClose","closeWindow","record","window","subs","complete","unsubscribe","startWindow","add","seen","push","next","asObservable","loop","cb","slice","forEach","terminate","subscribe","value","consumer","err","error"],"sources":["C:/minhas-receitas/node_modules/rxjs/dist/esm/internal/operators/windowTime.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function windowTime(windowTimeSpan, ...otherArgs) {\n    var _a, _b;\n    const scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    const windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    const maxWindowSize = otherArgs[1] || Infinity;\n    return operate((source, subscriber) => {\n        let windowRecords = [];\n        let restartOnClose = false;\n        const closeWindow = (record) => {\n            const { window, subs } = record;\n            window.complete();\n            subs.unsubscribe();\n            arrRemove(windowRecords, record);\n            restartOnClose && startWindow();\n        };\n        const startWindow = () => {\n            if (windowRecords) {\n                const subs = new Subscription();\n                subscriber.add(subs);\n                const window = new Subject();\n                const record = {\n                    window,\n                    subs,\n                    seen: 0,\n                };\n                windowRecords.push(record);\n                subscriber.next(window.asObservable());\n                executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n            }\n        };\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n        }\n        else {\n            restartOnClose = true;\n        }\n        startWindow();\n        const loop = (cb) => windowRecords.slice().forEach(cb);\n        const terminate = (cb) => {\n            loop(({ window }) => cb(window));\n            cb(subscriber);\n            subscriber.unsubscribe();\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            loop((record) => {\n                record.window.next(value);\n                maxWindowSize <= ++record.seen && closeWindow(record);\n            });\n        }, () => terminate((consumer) => consumer.complete()), (err) => terminate((consumer) => consumer.error(err))));\n        return () => {\n            windowRecords = null;\n        };\n    });\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,SAASC,UAAT,CAAoBC,cAApB,EAAkD;EACrD,IAAIC,EAAJ,EAAQC,EAAR;;EADqD,kCAAXC,SAAW;IAAXA,SAAW;EAAA;;EAErD,IAAMC,SAAS,GAAG,CAACH,EAAE,GAAGJ,YAAY,CAACM,SAAD,CAAlB,MAAmC,IAAnC,IAA2CF,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAgET,cAAlF;EACA,IAAMa,sBAAsB,GAAG,CAACH,EAAE,GAAGC,SAAS,CAAC,CAAD,CAAf,MAAwB,IAAxB,IAAgCD,EAAE,KAAK,KAAK,CAA5C,GAAgDA,EAAhD,GAAqD,IAApF;EACA,IAAMI,aAAa,GAAGH,SAAS,CAAC,CAAD,CAAT,IAAgBI,QAAtC;EACA,OAAOb,OAAO,CAAC,UAACc,MAAD,EAASC,UAAT,EAAwB;IACnC,IAAIC,aAAa,GAAG,EAApB;IACA,IAAIC,cAAc,GAAG,KAArB;;IACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;MAC5B,IAAQC,MAAR,GAAyBD,MAAzB,CAAQC,MAAR;MAAA,IAAgBC,IAAhB,GAAyBF,MAAzB,CAAgBE,IAAhB;MACAD,MAAM,CAACE,QAAP;MACAD,IAAI,CAACE,WAAL;MACArB,SAAS,CAACc,aAAD,EAAgBG,MAAhB,CAAT;MACAF,cAAc,IAAIO,WAAW,EAA7B;IACH,CAND;;IAOA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;MACtB,IAAIR,aAAJ,EAAmB;QACf,IAAMK,IAAI,GAAG,IAAItB,YAAJ,EAAb;QACAgB,UAAU,CAACU,GAAX,CAAeJ,IAAf;QACA,IAAMD,MAAM,GAAG,IAAIvB,OAAJ,EAAf;QACA,IAAMsB,MAAM,GAAG;UACXC,MAAM,EAANA,MADW;UAEXC,IAAI,EAAJA,IAFW;UAGXK,IAAI,EAAE;QAHK,CAAf;QAKAV,aAAa,CAACW,IAAd,CAAmBR,MAAnB;QACAJ,UAAU,CAACa,IAAX,CAAgBR,MAAM,CAACS,YAAP,EAAhB;QACAzB,eAAe,CAACiB,IAAD,EAAOX,SAAP,EAAkB;UAAA,OAAMQ,WAAW,CAACC,MAAD,CAAjB;QAAA,CAAlB,EAA6Cb,cAA7C,CAAf;MACH;IACJ,CAdD;;IAeA,IAAIK,sBAAsB,KAAK,IAA3B,IAAmCA,sBAAsB,IAAI,CAAjE,EAAoE;MAChEP,eAAe,CAACW,UAAD,EAAaL,SAAb,EAAwBc,WAAxB,EAAqCb,sBAArC,EAA6D,IAA7D,CAAf;IACH,CAFD,MAGK;MACDM,cAAc,GAAG,IAAjB;IACH;;IACDO,WAAW;;IACX,IAAMM,IAAI,GAAG,SAAPA,IAAO,CAACC,EAAD;MAAA,OAAQf,aAAa,CAACgB,KAAd,GAAsBC,OAAtB,CAA8BF,EAA9B,CAAR;IAAA,CAAb;;IACA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACH,EAAD,EAAQ;MACtBD,IAAI,CAAC;QAAA,IAAGV,MAAH,QAAGA,MAAH;QAAA,OAAgBW,EAAE,CAACX,MAAD,CAAlB;MAAA,CAAD,CAAJ;MACAW,EAAE,CAAChB,UAAD,CAAF;MACAA,UAAU,CAACQ,WAAX;IACH,CAJD;;IAKAT,MAAM,CAACqB,SAAP,CAAiBlC,wBAAwB,CAACc,UAAD,EAAa,UAACqB,KAAD,EAAW;MAC7DN,IAAI,CAAC,UAACX,MAAD,EAAY;QACbA,MAAM,CAACC,MAAP,CAAcQ,IAAd,CAAmBQ,KAAnB;QACAxB,aAAa,IAAI,EAAEO,MAAM,CAACO,IAA1B,IAAkCR,WAAW,CAACC,MAAD,CAA7C;MACH,CAHG,CAAJ;IAIH,CALwC,EAKtC;MAAA,OAAMe,SAAS,CAAC,UAACG,QAAD;QAAA,OAAcA,QAAQ,CAACf,QAAT,EAAd;MAAA,CAAD,CAAf;IAAA,CALsC,EAKc,UAACgB,GAAD;MAAA,OAASJ,SAAS,CAAC,UAACG,QAAD;QAAA,OAAcA,QAAQ,CAACE,KAAT,CAAeD,GAAf,CAAd;MAAA,CAAD,CAAlB;IAAA,CALd,CAAzC;IAMA,OAAO,YAAM;MACTtB,aAAa,GAAG,IAAhB;IACH,CAFD;EAGH,CA/Ca,CAAd;AAgDH"},"metadata":{},"sourceType":"module"}