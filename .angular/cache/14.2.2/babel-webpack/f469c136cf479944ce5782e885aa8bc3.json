{"ast":null,"code":"import _toConsumableArray from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _get from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createClass from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\n * @license Angular v14.2.1\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, inject, ɵConsole, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\nvar GenericBrowserDomAdapter = /*#__PURE__*/function (_ɵDomAdapter) {\n  _inherits(GenericBrowserDomAdapter, _ɵDomAdapter);\n\n  var _super = _createSuper(GenericBrowserDomAdapter);\n\n  function GenericBrowserDomAdapter() {\n    var _this;\n\n    _classCallCheck(this, GenericBrowserDomAdapter);\n\n    _this = _super.apply(this, arguments);\n    _this.supportsDOMEvents = true;\n    return _this;\n  }\n\n  return _createClass(GenericBrowserDomAdapter);\n}(ɵDomAdapter);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\n\nvar BrowserDomAdapter = /*#__PURE__*/function (_GenericBrowserDomAda) {\n  _inherits(BrowserDomAdapter, _GenericBrowserDomAda);\n\n  var _super2 = _createSuper(BrowserDomAdapter);\n\n  function BrowserDomAdapter() {\n    _classCallCheck(this, BrowserDomAdapter);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BrowserDomAdapter, [{\n    key: \"onAndCancel\",\n    value: function onAndCancel(el, evt, listener) {\n      el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of\n      // https://code.google.com/p/dart/issues/detail?id=17406\n\n      return function () {\n        el.removeEventListener(evt, listener, false);\n      };\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(el, evt) {\n      el.dispatchEvent(evt);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(tagName, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createElement(tagName);\n    }\n  }, {\n    key: \"createHtmlDocument\",\n    value: function createHtmlDocument() {\n      return document.implementation.createHTMLDocument('fakeTitle');\n    }\n  }, {\n    key: \"getDefaultDocument\",\n    value: function getDefaultDocument() {\n      return document;\n    }\n  }, {\n    key: \"isElementNode\",\n    value: function isElementNode(node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    }\n  }, {\n    key: \"isShadowRoot\",\n    value: function isShadowRoot(node) {\n      return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n\n  }, {\n    key: \"getGlobalEventTarget\",\n    value: function getGlobalEventTarget(doc, target) {\n      if (target === 'window') {\n        return window;\n      }\n\n      if (target === 'document') {\n        return doc;\n      }\n\n      if (target === 'body') {\n        return doc.body;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref(doc) {\n      var href = getBaseElementHref();\n      return href == null ? null : relativePath(href);\n    }\n  }, {\n    key: \"resetBaseElement\",\n    value: function resetBaseElement() {\n      baseElement = null;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return window.navigator.userAgent;\n    }\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      return ɵparseCookieValue(document.cookie, name);\n    }\n  }], [{\n    key: \"makeCurrent\",\n    value: function makeCurrent() {\n      ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n  }]);\n\n  return BrowserDomAdapter;\n}(GenericBrowserDomAdapter);\n\nvar baseElement = null;\n\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n} // based on urlUtils.js in AngularJS 1\n\n\nvar urlParsingNode;\n\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  var pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : \"/\".concat(pathName);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\n\n\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nfunction appInitializerFactory(transitionId, document, injector) {\n  return function () {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(function () {\n      var dom = ɵgetDOM();\n      var styles = document.querySelectorAll(\"style[ng-transition=\\\"\".concat(transitionId, \"\\\"]\"));\n\n      for (var i = 0; i < styles.length; i++) {\n        dom.remove(styles[i]);\n      }\n    });\n  };\n}\n\nvar SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar BrowserGetTestability = /*#__PURE__*/function () {\n  function BrowserGetTestability() {\n    _classCallCheck(this, BrowserGetTestability);\n  }\n\n  _createClass(BrowserGetTestability, [{\n    key: \"addToWindow\",\n    value: function addToWindow(registry) {\n      ɵglobal['getAngularTestability'] = function (elem) {\n        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n        if (testability == null) {\n          throw new Error('Could not find testability for element.');\n        }\n\n        return testability;\n      };\n\n      ɵglobal['getAllAngularTestabilities'] = function () {\n        return registry.getAllTestabilities();\n      };\n\n      ɵglobal['getAllAngularRootElements'] = function () {\n        return registry.getAllRootElements();\n      };\n\n      var whenAllStable = function whenAllStable(callback\n      /** TODO #9100 */\n      ) {\n        var testabilities = ɵglobal['getAllAngularTestabilities']();\n        var count = testabilities.length;\n        var didWork = false;\n\n        var decrement = function decrement(didWork_\n        /** TODO #9100 */\n        ) {\n          didWork = didWork || didWork_;\n          count--;\n\n          if (count == 0) {\n            callback(didWork);\n          }\n        };\n\n        testabilities.forEach(function (testability\n        /** TODO #9100 */\n        ) {\n          testability.whenStable(decrement);\n        });\n      };\n\n      if (!ɵglobal['frameworkStabilizers']) {\n        ɵglobal['frameworkStabilizers'] = [];\n      }\n\n      ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n  }, {\n    key: \"findTestabilityInTree\",\n    value: function findTestabilityInTree(registry, elem, findInAncestors) {\n      if (elem == null) {\n        return null;\n      }\n\n      var t = registry.getTestability(elem);\n\n      if (t != null) {\n        return t;\n      } else if (!findInAncestors) {\n        return null;\n      }\n\n      if (ɵgetDOM().isShadowRoot(elem)) {\n        return this.findTestabilityInTree(registry, elem.host, true);\n      }\n\n      return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n  }]);\n\n  return BrowserGetTestability;\n}();\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\n\n\nvar BrowserXhr = /*#__PURE__*/function () {\n  function BrowserXhr() {\n    _classCallCheck(this, BrowserXhr);\n  }\n\n  _createClass(BrowserXhr, [{\n    key: \"build\",\n    value: function build() {\n      return new XMLHttpRequest();\n    }\n  }]);\n\n  return BrowserXhr;\n}();\n\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) {\n  return new (t || BrowserXhr)();\n};\n\nBrowserXhr.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BrowserXhr,\n  factory: BrowserXhr.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\n\n\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  function EventManager(plugins, _zone) {\n    var _this2 = this;\n\n    _classCallCheck(this, EventManager);\n\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(function (p) {\n      return p.manager = _this2;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n\n\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n\n      return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n\n  }, {\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(target, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n\n      return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n\n  }, {\n    key: \"getZone\",\n    value: function getZone() {\n      return this._zone;\n    }\n    /** @internal */\n\n  }, {\n    key: \"_findPluginFor\",\n    value: function _findPluginFor(eventName) {\n      var plugin = this._eventNameToPlugin.get(eventName);\n\n      if (plugin) {\n        return plugin;\n      }\n\n      var plugins = this._plugins;\n\n      for (var i = 0; i < plugins.length; i++) {\n        var _plugin = plugins[i];\n\n        if (_plugin.supports(eventName)) {\n          this._eventNameToPlugin.set(eventName, _plugin);\n\n          return _plugin;\n        }\n      }\n\n      throw new Error(\"No event manager plugin found for event \".concat(eventName));\n    }\n  }]);\n\n  return EventManager;\n}();\n\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n};\n\nEventManager.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\nvar EventManagerPlugin = /*#__PURE__*/function () {\n  function EventManagerPlugin(_doc) {\n    _classCallCheck(this, EventManagerPlugin);\n\n    this._doc = _doc;\n  }\n\n  _createClass(EventManagerPlugin, [{\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(element, eventName, handler) {\n      var target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n\n      if (!target) {\n        throw new Error(\"Unsupported event target \".concat(target, \" for event \").concat(eventName));\n      }\n\n      return this.addEventListener(target, eventName, handler);\n    }\n  }]);\n\n  return EventManagerPlugin;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar SharedStylesHost = /*#__PURE__*/function () {\n  function SharedStylesHost() {\n    _classCallCheck(this, SharedStylesHost);\n\n    /** @internal */\n    this._stylesSet = new Set();\n  }\n\n  _createClass(SharedStylesHost, [{\n    key: \"addStyles\",\n    value: function addStyles(styles) {\n      var _this3 = this;\n\n      var additions = new Set();\n      styles.forEach(function (style) {\n        if (!_this3._stylesSet.has(style)) {\n          _this3._stylesSet.add(style);\n\n          additions.add(style);\n        }\n      });\n      this.onStylesAdded(additions);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {}\n  }, {\n    key: \"getAllStyles\",\n    value: function getAllStyles() {\n      return Array.from(this._stylesSet);\n    }\n  }]);\n\n  return SharedStylesHost;\n}();\n\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\n\nSharedStylesHost.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar DomSharedStylesHost = /*#__PURE__*/function (_SharedStylesHost) {\n  _inherits(DomSharedStylesHost, _SharedStylesHost);\n\n  var _super3 = _createSuper(DomSharedStylesHost);\n\n  function DomSharedStylesHost(_doc) {\n    var _this4;\n\n    _classCallCheck(this, DomSharedStylesHost);\n\n    _this4 = _super3.call(this);\n    _this4._doc = _doc; // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n\n    _this4._hostNodes = new Map();\n\n    _this4._hostNodes.set(_doc.head, []);\n\n    return _this4;\n  }\n\n  _createClass(DomSharedStylesHost, [{\n    key: \"_addStylesToHost\",\n    value: function _addStylesToHost(styles, host, styleNodes) {\n      var _this5 = this;\n\n      styles.forEach(function (style) {\n        var styleEl = _this5._doc.createElement('style');\n\n        styleEl.textContent = style;\n        styleNodes.push(host.appendChild(styleEl));\n      });\n    }\n  }, {\n    key: \"addHost\",\n    value: function addHost(hostNode) {\n      var styleNodes = [];\n\n      this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n\n      this._hostNodes.set(hostNode, styleNodes);\n    }\n  }, {\n    key: \"removeHost\",\n    value: function removeHost(hostNode) {\n      var styleNodes = this._hostNodes.get(hostNode);\n\n      if (styleNodes) {\n        styleNodes.forEach(removeStyle);\n      }\n\n      this._hostNodes.delete(hostNode);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {\n      var _this6 = this;\n\n      this._hostNodes.forEach(function (styleNodes, hostNode) {\n        _this6._addStylesToHost(additions, hostNode, styleNodes);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._hostNodes.forEach(function (styleNodes) {\n        return styleNodes.forEach(removeStyle);\n      });\n    }\n  }]);\n\n  return DomSharedStylesHost;\n}(SharedStylesHost);\n\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(i0.ɵɵinject(DOCUMENT));\n};\n\nDomSharedStylesHost.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction removeStyle(styleNode) {\n  ɵgetDOM().remove(styleNode);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/'\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\".concat(COMPONENT_VARIABLE);\nvar CONTENT_ATTR = \"_ngcontent-\".concat(COMPONENT_VARIABLE);\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction flattenStyles(compId, styles, target) {\n  for (var i = 0; i < styles.length; i++) {\n    var style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return function (event) {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    var allowDefaultBehavior = eventHandler(event);\n\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\nvar hasLoggedNativeEncapsulationWarning = false;\n\nvar DomRendererFactory2 = /*#__PURE__*/function () {\n  function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n    _classCallCheck(this, DomRendererFactory2);\n\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  _createClass(DomRendererFactory2, [{\n    key: \"createRenderer\",\n    value: function createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          {\n            var renderer = this.rendererByCompId.get(type.id);\n\n            if (!renderer) {\n              renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n              this.rendererByCompId.set(type.id, renderer);\n            }\n\n            renderer.applyToHost(element);\n            return renderer;\n          }\n        // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n        // value that is not known (but previously was the value for ViewEncapsulation.Native)\n\n        case 1:\n        case ViewEncapsulation.ShadowDom:\n          // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n          if ((typeof ngDevMode === 'undefined' || ngDevMode) && // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n          // enum value that is not known (but previously was the value for\n          // ViewEncapsulation.Native)\n          !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n            hasLoggedNativeEncapsulationWarning = true;\n            console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n          }\n\n          return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n\n        default:\n          {\n            if (!this.rendererByCompId.has(type.id)) {\n              var styles = flattenStyles(type.id, type.styles, []);\n              this.sharedStylesHost.addStyles(styles);\n              this.rendererByCompId.set(type.id, this.defaultRenderer);\n            }\n\n            return this.defaultRenderer;\n          }\n      }\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {}\n  }, {\n    key: \"end\",\n    value: function end() {}\n  }]);\n\n  return DomRendererFactory2;\n}();\n\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(DomSharedStylesHost), i0.ɵɵinject(APP_ID));\n};\n\nDomRendererFactory2.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\n\nvar DefaultDomRenderer2 = /*#__PURE__*/function () {\n  function DefaultDomRenderer2(eventManager) {\n    _classCallCheck(this, DefaultDomRenderer2);\n\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n    this.destroyNode = null;\n  }\n\n  _createClass(DefaultDomRenderer2, [{\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace) {\n      if (namespace) {\n        // TODO: `|| namespace` was added in\n        // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n        // support how Ivy passed around the namespace URI rather than short name at the time. It did\n        // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n        // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n        // namespaces should be and make it consistent.\n        // Related issues:\n        // https://github.com/angular/angular/issues/44028\n        // https://github.com/angular/angular/issues/44883\n        return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n      }\n\n      return document.createElement(name);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(value) {\n      return document.createComment(value);\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(value) {\n      return document.createTextNode(value);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      var targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.appendChild(newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      if (parent) {\n        var targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.insertBefore(newChild, refChild);\n      }\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      if (parent) {\n        parent.removeChild(oldChild);\n      }\n    }\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, preserveContent) {\n      var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n\n      if (!el) {\n        throw new Error(\"The selector \\\"\".concat(selectorOrNode, \"\\\" did not match any elements\"));\n      }\n\n      if (!preserveContent) {\n        el.textContent = '';\n      }\n\n      return el;\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return node.parentNode;\n    }\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return node.nextSibling;\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      if (namespace) {\n        name = namespace + ':' + name;\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.setAttributeNS(namespaceUri, name, value);\n        } else {\n          el.setAttribute(name, value);\n        }\n      } else {\n        el.setAttribute(name, value);\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      if (namespace) {\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.removeAttributeNS(namespaceUri, name);\n        } else {\n          el.removeAttribute(\"\".concat(namespace, \":\").concat(name));\n        }\n      } else {\n        el.removeAttribute(name);\n      }\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      el.classList.add(name);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      el.classList.remove(name);\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n        el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n      } else {\n        el.style[style] = value;\n      }\n    }\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      if (flags & RendererStyleFlags2.DashCase) {\n        el.style.removeProperty(style);\n      } else {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        el.style[style] = '';\n      }\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      NG_DEV_MODE$1 && checkNoSyntheticProp(name, 'property');\n      el[name] = value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      node.nodeValue = value;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, event, callback) {\n      NG_DEV_MODE$1 && checkNoSyntheticProp(event, 'listener');\n\n      if (typeof target === 'string') {\n        return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n      }\n\n      return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n  }]);\n\n  return DefaultDomRenderer2;\n}();\n\nvar AT_CHARCODE = function () {\n  return '@'.charCodeAt(0);\n}();\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\"Unexpected synthetic \".concat(nameKind, \" \").concat(name, \" found. Please make sure that:\\n  - Either `BrowserAnimationsModule` or `NoopAnimationsModule` are imported in your application.\\n  - There is corresponding configuration for the animation named `\").concat(name, \"` defined in the `animations` field of the `@Component` decorator (see https://angular.io/api/core/Component#animations).\"));\n  }\n}\n\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\n\nvar EmulatedEncapsulationDomRenderer2 = /*#__PURE__*/function (_DefaultDomRenderer) {\n  _inherits(EmulatedEncapsulationDomRenderer2, _DefaultDomRenderer);\n\n  var _super4 = _createSuper(EmulatedEncapsulationDomRenderer2);\n\n  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n    var _this7;\n\n    _classCallCheck(this, EmulatedEncapsulationDomRenderer2);\n\n    _this7 = _super4.call(this, eventManager);\n    _this7.component = component;\n    var styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    _this7.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    _this7.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    return _this7;\n  }\n\n  _createClass(EmulatedEncapsulationDomRenderer2, [{\n    key: \"applyToHost\",\n    value: function applyToHost(element) {\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, element, this.hostAttr, '');\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(parent, name) {\n      var el = _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"createElement\", this).call(this, parent, name);\n\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, el, this.contentAttr, '');\n\n      return el;\n    }\n  }]);\n\n  return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2);\n\nvar ShadowDomRenderer = /*#__PURE__*/function (_DefaultDomRenderer2) {\n  _inherits(ShadowDomRenderer, _DefaultDomRenderer2);\n\n  var _super5 = _createSuper(ShadowDomRenderer);\n\n  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n    var _this8;\n\n    _classCallCheck(this, ShadowDomRenderer);\n\n    _this8 = _super5.call(this, eventManager);\n    _this8.sharedStylesHost = sharedStylesHost;\n    _this8.hostEl = hostEl;\n    _this8.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n\n    _this8.sharedStylesHost.addHost(_this8.shadowRoot);\n\n    var styles = flattenStyles(component.id, component.styles, []);\n\n    for (var i = 0; i < styles.length; i++) {\n      var styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n\n      _this8.shadowRoot.appendChild(styleEl);\n    }\n\n    return _this8;\n  }\n\n  _createClass(ShadowDomRenderer, [{\n    key: \"nodeOrShadowRoot\",\n    value: function nodeOrShadowRoot(node) {\n      return node === this.hostEl ? this.shadowRoot : node;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"appendChild\", this).call(this, this.nodeOrShadowRoot(parent), newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"insertBefore\", this).call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"removeChild\", this).call(this, this.nodeOrShadowRoot(parent), oldChild);\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return this.nodeOrShadowRoot(_get(_getPrototypeOf(ShadowDomRenderer.prototype), \"parentNode\", this).call(this, this.nodeOrShadowRoot(node)));\n    }\n  }]);\n\n  return ShadowDomRenderer;\n}(DefaultDomRenderer2);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar DomEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin) {\n  _inherits(DomEventsPlugin, _EventManagerPlugin);\n\n  var _super6 = _createSuper(DomEventsPlugin);\n\n  function DomEventsPlugin(doc) {\n    _classCallCheck(this, DomEventsPlugin);\n\n    return _super6.call(this, doc);\n  } // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n\n\n  _createClass(DomEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this9 = this;\n\n      element.addEventListener(eventName, handler, false);\n      return function () {\n        return _this9.removeEventListener(element, eventName, handler);\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(target, eventName, callback) {\n      return target.removeEventListener(eventName, callback);\n    }\n  }]);\n\n  return DomEventsPlugin;\n}(EventManagerPlugin);\n\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n};\n\nDomEventsPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines supported modifiers for key events.\n */\n\n\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift']; // The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n\nvar _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\n\nvar MODIFIER_KEY_GETTERS = {\n  'alt': function alt(event) {\n    return event.altKey;\n  },\n  'control': function control(event) {\n    return event.ctrlKey;\n  },\n  'meta': function meta(event) {\n    return event.metaKey;\n  },\n  'shift': function shift(event) {\n    return event.shiftKey;\n  }\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nvar KeyEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin2) {\n  _inherits(KeyEventsPlugin, _EventManagerPlugin2);\n\n  var _super7 = _createSuper(KeyEventsPlugin);\n\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  function KeyEventsPlugin(doc) {\n    _classCallCheck(this, KeyEventsPlugin);\n\n    return _super7.call(this, doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n\n\n  _createClass(KeyEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n      var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(function () {\n        return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n      });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n\n  }], [{\n    key: \"parseEventName\",\n    value: function parseEventName(eventName) {\n      var parts = eventName.toLowerCase().split('.');\n      var domEventName = parts.shift();\n\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n\n      var key = KeyEventsPlugin._normalizeKey(parts.pop());\n\n      var fullKey = '';\n      var codeIX = parts.indexOf('code');\n\n      if (codeIX > -1) {\n        parts.splice(codeIX, 1);\n        fullKey = 'code.';\n      }\n\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        var index = parts.indexOf(modifierName);\n\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      } // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n      //       The code must remain in the `result['domEventName']` form.\n      // return {domEventName, fullKey};\n\n\n      var result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n\n  }, {\n    key: \"matchEventFullKeyCode\",\n    value: function matchEventFullKeyCode(event, fullKeyCode) {\n      var keycode = _keyMap[event.key] || event.key;\n      var key = '';\n\n      if (fullKeyCode.indexOf('code.') > -1) {\n        keycode = event.code;\n        key = 'code.';\n      } // the keycode could be unidentified so we have to check here\n\n\n      if (keycode == null || !keycode) return false;\n      keycode = keycode.toLowerCase();\n\n      if (keycode === ' ') {\n        keycode = 'space'; // for readability\n      } else if (keycode === '.') {\n        keycode = 'dot'; // because '.' is used as a separator in event names\n      }\n\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        if (modifierName !== keycode) {\n          var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n          if (modifierGetter(event)) {\n            key += modifierName + '.';\n          }\n        }\n      });\n      key += keycode;\n      return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n\n  }, {\n    key: \"eventCallback\",\n    value: function eventCallback(fullKey, handler, zone) {\n      return function (event) {\n        if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n          zone.runGuarded(function () {\n            return handler(event);\n          });\n        }\n      };\n    }\n    /** @internal */\n\n  }, {\n    key: \"_normalizeKey\",\n    value: function _normalizeKey(keyName) {\n      // TODO: switch to a Map if the mapping grows too much\n      switch (keyName) {\n        case 'esc':\n          return 'escape';\n\n        default:\n          return keyName;\n      }\n    }\n  }]);\n\n  return KeyEventsPlugin;\n}(EventManagerPlugin);\n\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n};\n\nKeyEventsPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\n\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication(Object.assign({\n    rootComponent: rootComponent\n  }, createProvidersConfig(options)));\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\n\n\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\n\nfunction createProvidersConfig(options) {\n  var _a;\n\n  return {\n    appProviders: [].concat(BROWSER_MODULE_PROVIDERS, _toConsumableArray((_a = options === null || options === void 0 ? void 0 : options.providers) !== null && _a !== void 0 ? _a : [])),\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @developerPreview\n * @publicApi\n */\n\n\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n  return [].concat(TESTABILITY_PROVIDERS);\n}\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\n\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\n\nvar BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\nvar TESTABILITY_PROVIDERS = [{\n  provide: ɵTESTABILITY_GETTER,\n  useClass: BrowserGetTestability,\n  deps: []\n}, {\n  provide: ɵTESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}];\nvar BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, NG_DEV_MODE ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n\nvar BrowserModule = /*#__PURE__*/function () {\n  function BrowserModule(providersAlreadyPresent) {\n    _classCallCheck(this, BrowserModule);\n\n    if (NG_DEV_MODE && providersAlreadyPresent) {\n      throw new Error(\"Providers from the `BrowserModule` have already been loaded. If you need access \" + \"to common directives such as NgIf and NgFor, import the `CommonModule` instead.\");\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n\n\n  _createClass(BrowserModule, null, [{\n    key: \"withServerTransition\",\n    value: function withServerTransition(params) {\n      return {\n        ngModule: BrowserModule,\n        providers: [{\n          provide: APP_ID,\n          useValue: params.appId\n        }, {\n          provide: TRANSITION_ID,\n          useExisting: APP_ID\n        }, SERVER_TRANSITION_PROVIDERS]\n      };\n    }\n  }]);\n\n  return BrowserModule;\n}();\n\nBrowserModule.ɵfac = function BrowserModule_Factory(t) {\n  return new (t || BrowserModule)(i0.ɵɵinject(BROWSER_MODULE_PROVIDERS_MARKER, 12));\n};\n\nBrowserModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [].concat(BROWSER_MODULE_PROVIDERS, TESTABILITY_PROVIDERS),\n  imports: [CommonModule, ApplicationModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: [].concat(BROWSER_MODULE_PROVIDERS, TESTABILITY_PROVIDERS),\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BROWSER_MODULE_PROVIDERS_MARKER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\n\n\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n\n\nvar Meta = /*#__PURE__*/function () {\n  function Meta(_doc) {\n    _classCallCheck(this, Meta);\n\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n\n\n  _createClass(Meta, [{\n    key: \"addTag\",\n    value: function addTag(tag) {\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n\n  }, {\n    key: \"addTags\",\n    value: function addTags(tags) {\n      var _this10 = this;\n\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tags) return [];\n      return tags.reduce(function (result, tag) {\n        if (tag) {\n          result.push(_this10._getOrCreateElement(tag, forceCreation));\n        }\n\n        return result;\n      }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n\n  }, {\n    key: \"getTag\",\n    value: function getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._doc.querySelector(\"meta[\".concat(attrSelector, \"]\")) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n\n  }, {\n    key: \"getTags\",\n    value: function getTags(attrSelector) {\n      if (!attrSelector) return [];\n\n      var list\n      /*NodeList*/\n      = this._doc.querySelectorAll(\"meta[\".concat(attrSelector, \"]\"));\n\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n\n  }, {\n    key: \"updateTag\",\n    value: function updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      var meta = this.getTag(selector);\n\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n\n  }, {\n    key: \"removeTag\",\n    value: function removeTag(attrSelector) {\n      this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n\n  }, {\n    key: \"removeTagElement\",\n    value: function removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n  }, {\n    key: \"_getOrCreateElement\",\n    value: function _getOrCreateElement(meta) {\n      var _this11 = this;\n\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!forceCreation) {\n        var selector = this._parseSelector(meta); // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n\n\n        var elem = this.getTags(selector).filter(function (elem) {\n          return _this11._containsAttributes(meta, elem);\n        })[0];\n        if (elem !== undefined) return elem;\n      }\n\n      var element = this._dom.createElement('meta');\n\n      this._setMetaElementAttributes(meta, element);\n\n      var head = this._doc.getElementsByTagName('head')[0];\n\n      head.appendChild(element);\n      return element;\n    }\n  }, {\n    key: \"_setMetaElementAttributes\",\n    value: function _setMetaElementAttributes(tag, el) {\n      var _this12 = this;\n\n      Object.keys(tag).forEach(function (prop) {\n        return el.setAttribute(_this12._getMetaKeyMap(prop), tag[prop]);\n      });\n      return el;\n    }\n  }, {\n    key: \"_parseSelector\",\n    value: function _parseSelector(tag) {\n      var attr = tag.name ? 'name' : 'property';\n      return \"\".concat(attr, \"=\\\"\").concat(tag[attr], \"\\\"\");\n    }\n  }, {\n    key: \"_containsAttributes\",\n    value: function _containsAttributes(tag, elem) {\n      var _this13 = this;\n\n      return Object.keys(tag).every(function (key) {\n        return elem.getAttribute(_this13._getMetaKeyMap(key)) === tag[key];\n      });\n    }\n  }, {\n    key: \"_getMetaKeyMap\",\n    value: function _getMetaKeyMap(prop) {\n      return META_KEYS_MAP[prop] || prop;\n    }\n  }]);\n\n  return Meta;\n}();\n\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(i0.ɵɵinject(DOCUMENT));\n};\n\nMeta.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Meta,\n  factory: function Meta_Factory(t) {\n    var r = null;\n\n    if (t) {\n      r = new t();\n    } else {\n      r = createMeta();\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\n\n\nvar META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create Title service.\n */\n\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n\n\nvar Title = /*#__PURE__*/function () {\n  function Title(_doc) {\n    _classCallCheck(this, Title);\n\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n\n\n  _createClass(Title, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(newTitle) {\n      this._doc.title = newTitle || '';\n    }\n  }]);\n\n  return Title;\n}();\n\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(i0.ɵɵinject(DOCUMENT));\n};\n\nTitle.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Title,\n  factory: function Title_Factory(t) {\n    var r = null;\n\n    if (t) {\n      r = new t();\n    } else {\n      r = createTitle();\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar DASH_CASE_REGEXP = /-([a-z])/g;\n\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, function () {\n    for (var _len = arguments.length, m = new Array(_len), _key = 0; _key < _len; _key++) {\n      m[_key] = arguments[_key];\n    }\n\n    return '-' + m[1].toLowerCase();\n  });\n}\n\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, function () {\n    for (var _len2 = arguments.length, m = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      m[_key2] = arguments[_key2];\n    }\n\n    return m[1].toUpperCase();\n  });\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    var ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar win = typeof window !== 'undefined' && window || {};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ChangeDetectionPerfRecord = /*#__PURE__*/_createClass(function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n  _classCallCheck(this, ChangeDetectionPerfRecord);\n\n  this.msPerTick = msPerTick;\n  this.numTicks = numTicks;\n});\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nvar AngularProfiler = /*#__PURE__*/function () {\n  function AngularProfiler(ref) {\n    _classCallCheck(this, AngularProfiler);\n\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n\n\n  _createClass(AngularProfiler, [{\n    key: \"timeChangeDetection\",\n    value: function timeChangeDetection(config) {\n      var record = config && config['record'];\n      var profileName = 'Change Detection'; // Profiler is not available in Android browsers without dev tools opened\n\n      var isProfilerAvailable = win.console.profile != null;\n\n      if (record && isProfilerAvailable) {\n        win.console.profile(profileName);\n      }\n\n      var start = performanceNow();\n      var numTicks = 0;\n\n      while (numTicks < 5 || performanceNow() - start < 500) {\n        this.appRef.tick();\n        numTicks++;\n      }\n\n      var end = performanceNow();\n\n      if (record && isProfilerAvailable) {\n        win.console.profileEnd(profileName);\n      }\n\n      var msPerTick = (end - start) / numTicks;\n      win.console.log(\"ran \".concat(numTicks, \" change detection cycles\"));\n      win.console.log(\"\".concat(msPerTick.toFixed(2), \" ms per check\"));\n      return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n  }]);\n\n  return AngularProfiler;\n}();\n\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() : new Date().getTime();\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction escapeHtml(text) {\n  var escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, function (s) {\n    return escapedText[s];\n  });\n}\n\nfunction unescapeHtml(text) {\n  var unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, function (s) {\n    return unescapedText[s];\n  });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\n\n\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\n\n\nvar TransferState = /*#__PURE__*/function () {\n  function TransferState() {\n    _classCallCheck(this, TransferState);\n\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n\n\n  _createClass(TransferState, [{\n    key: \"get\",\n    value: function get(key, defaultValue) {\n      return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n\n  }, {\n    key: \"hasKey\",\n    value: function hasKey(key) {\n      return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Indicates whether the state is empty.\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return Object.keys(this.store).length === 0;\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n\n  }, {\n    key: \"onSerialize\",\n    value: function onSerialize(key, callback) {\n      this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      // Call the onSerialize callbacks and put those values into the store.\n      for (var key in this.onSerializeCallbacks) {\n        if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n          try {\n            this.store[key] = this.onSerializeCallbacks[key]();\n          } catch (e) {\n            console.warn('Exception in onSerialize callback: ', e);\n          }\n        }\n      }\n\n      return JSON.stringify(this.store);\n    }\n  }]);\n\n  return TransferState;\n}();\n\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\n\nTransferState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: function factory() {\n    return function () {\n      var doc = inject(DOCUMENT);\n      var appId = inject(APP_ID);\n      var state = new TransferState();\n      state.store = retrieveTransferredState(doc, appId);\n      return state;\n    }();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: function useFactory() {\n        var doc = inject(DOCUMENT);\n        var appId = inject(APP_ID);\n        var state = new TransferState();\n        state.store = retrieveTransferredState(doc, appId);\n        return state;\n      }\n    }]\n  }], null, null);\n})();\n\nfunction retrieveTransferredState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  var script = doc.getElementById(appId + '-state');\n  var initialState = {};\n\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n\n  return initialState;\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\n\n\nvar BrowserTransferStateModule = /*#__PURE__*/_createClass(function BrowserTransferStateModule() {\n  _classCallCheck(this, BrowserTransferStateModule);\n});\n\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n  return new (t || BrowserTransferStateModule)();\n};\n\nBrowserTransferStateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\n\n\nvar By = /*#__PURE__*/function () {\n  function By() {\n    _classCallCheck(this, By);\n  }\n\n  _createClass(By, null, [{\n    key: \"all\",\n    value:\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    function all() {\n      return function () {\n        return true;\n      };\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n\n  }, {\n    key: \"css\",\n    value: function css(selector) {\n      return function (debugElement) {\n        return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n      };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n\n  }, {\n    key: \"directive\",\n    value: function directive(type) {\n      return function (debugNode) {\n        return debugNode.providerTokens.indexOf(type) !== -1;\n      };\n    }\n  }]);\n\n  return By;\n}();\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Supported HammerJS recognizer event names.\n */\n\n\nvar EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\n\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\n\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n\nvar HammerGestureConfig = /*#__PURE__*/function () {\n  function HammerGestureConfig() {\n    _classCallCheck(this, HammerGestureConfig);\n\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n\n\n  _createClass(HammerGestureConfig, [{\n    key: \"buildHammer\",\n    value: function buildHammer(element) {\n      var mc = new Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n\n      for (var eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n\n      return mc;\n    }\n  }]);\n\n  return HammerGestureConfig;\n}();\n\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\n\nHammerGestureConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n\n\nvar HammerGesturesPlugin = /*#__PURE__*/function (_EventManagerPlugin3) {\n  _inherits(HammerGesturesPlugin, _EventManagerPlugin3);\n\n  var _super8 = _createSuper(HammerGesturesPlugin);\n\n  function HammerGesturesPlugin(doc, _config, console, loader) {\n    var _this14;\n\n    _classCallCheck(this, HammerGesturesPlugin);\n\n    _this14 = _super8.call(this, doc);\n    _this14._config = _config;\n    _this14.console = console;\n    _this14.loader = loader;\n    _this14._loaderPromise = null;\n    return _this14;\n  }\n\n  _createClass(HammerGesturesPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n\n      if (!window.Hammer && !this.loader) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because Hammer.JS is not \") + \"loaded and no custom loader has been specified.\");\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this15 = this;\n\n      var zone = this.manager.getZone();\n      eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n\n      if (!window.Hammer && this.loader) {\n        this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(function () {\n          return _this15.loader();\n        }); // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n\n        var cancelRegistration = false;\n\n        var deregister = function deregister() {\n          cancelRegistration = true;\n        };\n\n        zone.runOutsideAngular(function () {\n          return _this15._loaderPromise.then(function () {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!window.Hammer) {\n              if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _this15.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n              }\n\n              deregister = function deregister() {};\n\n              return;\n            }\n\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to\n              // removal.\n              deregister = _this15.addEventListener(element, eventName, handler);\n            }\n          }).catch(function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              _this15.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because the custom \") + \"Hammer.JS loader failed.\");\n            }\n\n            deregister = function deregister() {};\n          });\n        }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n\n        return function () {\n          deregister();\n        };\n      }\n\n      return zone.runOutsideAngular(function () {\n        // Creating the manager bind events, must be done outside of angular\n        var mc = _this15._config.buildHammer(element);\n\n        var callback = function callback(eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n\n        mc.on(eventName, callback);\n        return function () {\n          mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n  }, {\n    key: \"isCustomEvent\",\n    value: function isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n  }]);\n\n  return HammerGesturesPlugin;\n}(EventManagerPlugin);\n\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.ɵConsole), i0.ɵɵinject(HAMMER_LOADER, 8));\n};\n\nHammerGesturesPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: i0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n\n\nvar HammerModule = /*#__PURE__*/_createClass(function HammerModule() {\n  _classCallCheck(this, HammerModule);\n});\n\nHammerModule.ɵfac = function HammerModule_Factory(t) {\n  return new (t || HammerModule)();\n};\n\nHammerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n  }, {\n    provide: HAMMER_GESTURE_CONFIG,\n    useClass: HammerGestureConfig,\n    deps: []\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig,\n        deps: []\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n\n\nvar DomSanitizer = /*#__PURE__*/_createClass(function DomSanitizer() {\n  _classCallCheck(this, DomSanitizer);\n});\n\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\n\nDomSanitizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSanitizer,\n  factory: function DomSanitizer_Factory(t) {\n    var r = null;\n\n    if (t) {\n      r = new (t || DomSanitizer)();\n    } else {\n      r = i0.ɵɵinject(DomSanitizerImpl);\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(function () {\n        return DomSanitizerImpl;\n      })\n    }]\n  }], null, null);\n})();\n\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\nvar DomSanitizerImpl = /*#__PURE__*/function (_DomSanitizer) {\n  _inherits(DomSanitizerImpl, _DomSanitizer);\n\n  var _super9 = _createSuper(DomSanitizerImpl);\n\n  function DomSanitizerImpl(_doc) {\n    var _this16;\n\n    _classCallCheck(this, DomSanitizerImpl);\n\n    _this16 = _super9.call(this);\n    _this16._doc = _doc;\n    return _this16;\n  }\n\n  _createClass(DomSanitizerImpl, [{\n    key: \"sanitize\",\n    value: function sanitize(ctx, value) {\n      if (value == null) return null;\n\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return value;\n\n        case SecurityContext.HTML:\n          if (ɵallowSanitizationBypassAndThrow(value, \"HTML\"\n          /* BypassType.Html */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n\n        case SecurityContext.STYLE:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Style\"\n          /* BypassType.Style */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return value;\n\n        case SecurityContext.SCRIPT:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Script\"\n          /* BypassType.Script */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          throw new Error('unsafe value used in a script context');\n\n        case SecurityContext.URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"URL\"\n          /* BypassType.Url */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return ɵ_sanitizeUrl(String(value));\n\n        case SecurityContext.RESOURCE_URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\"\n          /* BypassType.ResourceUrl */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n\n        default:\n          throw new Error(\"Unexpected SecurityContext \".concat(ctx, \" (see https://g.co/ng/security#xss)\"));\n      }\n    }\n  }, {\n    key: \"bypassSecurityTrustHtml\",\n    value: function bypassSecurityTrustHtml(value) {\n      return ɵbypassSanitizationTrustHtml(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustStyle\",\n    value: function bypassSecurityTrustStyle(value) {\n      return ɵbypassSanitizationTrustStyle(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustScript\",\n    value: function bypassSecurityTrustScript(value) {\n      return ɵbypassSanitizationTrustScript(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustUrl\",\n    value: function bypassSecurityTrustUrl(value) {\n      return ɵbypassSanitizationTrustUrl(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustResourceUrl\",\n    value: function bypassSecurityTrustResourceUrl(value) {\n      return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n  }]);\n\n  return DomSanitizerImpl;\n}(DomSanitizer);\n\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n};\n\nDomSanitizerImpl.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSanitizerImpl,\n  factory: function DomSanitizerImpl_Factory(t) {\n    var r = null;\n\n    if (t) {\n      r = new t();\n    } else {\n      r = domSanitizerImplFactory(i0.ɵɵinject(Injector));\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar VERSION = new Version('14.2.1');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"names":["ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","i0","InjectionToken","ApplicationInitStatus","APP_INITIALIZER","Injector","ɵglobal","Injectable","Inject","ViewEncapsulation","APP_ID","RendererStyleFlags2","ɵinternalCreateApplication","ErrorHandler","ɵsetDocument","PLATFORM_ID","PLATFORM_INITIALIZER","createPlatformFactory","platformCore","ɵTESTABILITY_GETTER","ɵTESTABILITY","Testability","NgZone","TestabilityRegistry","ɵINJECTOR_SCOPE","RendererFactory2","ApplicationModule","NgModule","Optional","SkipSelf","ɵɵinject","ApplicationRef","inject","ɵConsole","forwardRef","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","Version","GenericBrowserDomAdapter","arguments","supportsDOMEvents","BrowserDomAdapter","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","node","parentNode","removeChild","tagName","doc","getDefaultDocument","createElement","document","implementation","createHTMLDocument","nodeType","Node","ELEMENT_NODE","DocumentFragment","target","window","body","href","getBaseElementHref","relativePath","baseElement","navigator","userAgent","name","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","TRANSITION_ID","appInitializerFactory","transitionId","injector","get","donePromise","then","dom","styles","querySelectorAll","i","length","remove","SERVER_TRANSITION_PROVIDERS","provide","useFactory","deps","multi","BrowserGetTestability","registry","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","isShadowRoot","host","parentElement","BrowserXhr","XMLHttpRequest","ɵfac","ɵprov","type","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","p","manager","_plugins","slice","reverse","element","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","supports","set","undefined","decorators","args","EventManagerPlugin","_doc","getGlobalEventTarget","SharedStylesHost","_stylesSet","Set","additions","style","has","add","onStylesAdded","Array","from","DomSharedStylesHost","_hostNodes","head","styleNodes","styleEl","textContent","appendChild","hostNode","_addStylesToHost","removeStyle","delete","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE$1","ngDevMode","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","replace","shimHostAttribute","flattenStyles","compId","isArray","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","encapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","console","warn","ShadowDomRenderer","addStyles","data","Object","create","destroyNode","namespace","createElementNS","value","createComment","createTextNode","parent","newChild","targetParent","isTemplateNode","content","refChild","insertBefore","oldChild","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","removeAttribute","classList","flags","DashCase","Important","setProperty","removeProperty","checkNoSyntheticProp","nodeValue","AT_CHARCODE","charCodeAt","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","addHost","removeHost","nodeOrShadowRoot","DomEventsPlugin","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","getZone","runOutsideAngular","onAndCancel","parts","toLowerCase","split","domEventName","shift","key","_normalizeKey","pop","fullKey","codeIX","indexOf","splice","modifierName","index","result","fullKeyCode","keycode","code","modifierGetter","zone","matchEventFullKeyCode","runGuarded","keyName","NG_DEV_MODE","bootstrapApplication","rootComponent","options","assign","createProvidersConfig","createApplication","_a","appProviders","BROWSER_MODULE_PROVIDERS","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","makeCurrent","errorHandler","_document","useValue","platformBrowser","BROWSER_MODULE_PROVIDERS_MARKER","useClass","useExisting","BrowserModule","providersAlreadyPresent","params","ngModule","ɵmod","ɵinj","exports","createMeta","Meta","_dom","tag","forceCreation","_getOrCreateElement","tags","reduce","attrSelector","list","call","selector","_parseSelector","meta","getTag","_setMetaElementAttributes","removeTagElement","getTags","filter","_containsAttributes","getElementsByTagName","keys","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","providedIn","httpEquiv","createTitle","Title","title","newTitle","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","m","dashCaseToCamelCase","toUpperCase","exportNgVar","COMPILED","ng","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","config","record","profileName","isProfilerAvailable","profile","start","performanceNow","tick","end","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","s","unescapeHtml","unescapedText","makeStateKey","TransferState","store","onSerializeCallbacks","defaultValue","hasOwnProperty","e","JSON","stringify","state","retrieveTransferredState","script","getElementById","initialState","parse","BrowserTransferStateModule","By","debugElement","nativeElement","elementMatches","debugNode","providerTokens","n","isElementNode","matches","msMatchesSelector","webkitMatchesSelector","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","mc","Hammer","enable","HammerGesturesPlugin","_config","loader","_loaderPromise","isCustomEvent","cancelRegistration","deregister","catch","buildHammer","eventObj","on","off","destroy","HammerModule","DomSanitizer","DomSanitizerImpl","domSanitizerImplFactory","ctx","NONE","HTML","String","toString","STYLE","SCRIPT","URL","RESOURCE_URL","VERSION","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵDomSharedStylesHost","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵNAMESPACE_URIS","ɵSharedStylesHost","ɵTRANSITION_ID","ɵescapeHtml","ɵflattenStyles","ɵinitDomAdapter","ɵshimContentAttribute","ɵshimHostAttribute"],"sources":["C:/minhas-receitas/node_modules/@angular/platform-browser/fesm2015/platform-browser.mjs"],"sourcesContent":["/**\n * @license Angular v14.2.1\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, inject, ɵConsole, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserXhr.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserXhr });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nEventManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: EventManager });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [EVENT_MANAGER_PLUGINS]\n                    }] }, { type: i0.NgZone }];\n    } });\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: SharedStylesHost, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: SharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }] });\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSharedStylesHost, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\nfunction removeStyle(styleNode) {\n    ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: DomSharedStylesHost }, { token: APP_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nDomRendererFactory2.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomRendererFactory2 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [APP_ID]\n                    }] }];\n    } });\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nKeyEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: KeyEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return ɵinternalCreateApplication(Object.assign({ rootComponent }, createProvidersConfig(options)));\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction createApplication(options) {\n    return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    var _a;\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...((_a = options === null || options === void 0 ? void 0 : options.providers) !== null && _a !== void 0 ? _a : []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @developerPreview\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: ɵTESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: ɵTESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    },\n    {\n        provide: Testability,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] }, {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    NG_DEV_MODE ? { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } : []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if (NG_DEV_MODE && providersAlreadyPresent) {\n            throw new Error(`Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] });\nBrowserModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserModule, providers: [\n        ...BROWSER_MODULE_PROVIDERS,\n        ...TESTABILITY_PROVIDERS\n    ], imports: [CommonModule, ApplicationModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        ...BROWSER_MODULE_PROVIDERS,\n                        ...TESTABILITY_PROVIDERS\n                    ],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMeta.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nTitle.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Indicates whether the state is empty.\n     */\n    get isEmpty() {\n        return Object.keys(this.store).length === 0;\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: TransferState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTransferState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: TransferState, providedIn: 'root', useFactory: () => {\n        const doc = inject(DOCUMENT);\n        const appId = inject(APP_ID);\n        const state = new TransferState();\n        state.store = retrieveTransferredState(doc, appId);\n        return state;\n    } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: TransferState, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => {\n                        const doc = inject(DOCUMENT);\n                        const appId = inject(APP_ID);\n                        const state = new TransferState();\n                        state.store = retrieveTransferredState(doc, appId);\n                        return state;\n                    }\n                }]\n        }] });\nfunction retrieveTransferredState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return initialState;\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserTransferStateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserTransferStateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserTransferStateModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BrowserTransferStateModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGestureConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerGestureConfig });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGesturesPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerGesturesPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: HammerGestureConfig, decorators: [{\n                        type: Inject,\n                        args: [HAMMER_GESTURE_CONFIG]\n                    }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [HAMMER_LOADER]\n                    }] }];\n    } });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHammerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerModule });\nHammerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerModule, providers: [\n        {\n            provide: EVENT_MANAGER_PLUGINS,\n            useClass: HammerGesturesPlugin,\n            multi: true,\n            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n        },\n        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(function () { return DomSanitizerImpl; }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizerImpl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('14.2.1');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n"],"mappings":"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AAP,KAAqB,WAArB,IAAoC,CAAC,CAACA,SAA1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASyH,oBAAT,CAA8BC,aAA9B,EAA6CC,OAA7C,EAAsD;EAClD,OAAOzS,0BAA0B,CAACmN,MAAM,CAACuF,MAAP,CAAc;IAAEF,aAAa,EAAbA;EAAF,CAAd,EAAiCG,qBAAqB,CAACF,OAAD,CAAtD,CAAD,CAAjC;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,iBAAT,CAA2BH,OAA3B,EAAoC;EAChC,OAAOzS,0BAA0B,CAAC2S,qBAAqB,CAACF,OAAD,CAAtB,CAAjC;AACH;;AACD,SAASE,qBAAT,CAA+BF,OAA/B,EAAwC;EACpC,IAAII,EAAJ;;EACA,OAAO;IACHC,YAAY,YACLC,wBADK,qBAEJ,CAACF,EAAE,GAAGJ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACO,SAAhE,MAA+E,IAA/E,IAAuFH,EAAE,KAAK,KAAK,CAAnG,GAAuGA,EAAvG,GAA4G,EAFxG,EADT;IAKHI,iBAAiB,EAAEC;EALhB,CAAP;AAOH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,+BAAT,GAA2C;EACvC;EACA;EACA,iBAAWC,qBAAX;AACH;;AACD,SAASC,cAAT,GAA0B;EACtBhR,iBAAiB,CAACiR,WAAlB;AACH;;AACD,SAASC,YAAT,GAAwB;EACpB,OAAO,IAAItT,YAAJ,E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"},"metadata":{},"sourceType":"module"}