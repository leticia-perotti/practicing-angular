{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/minhas-receitas/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function bufferTime(bufferTimeSpan) {\n  var _a, _b;\n\n  for (var _len = arguments.length, otherArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherArgs[_key - 1] = arguments[_key];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxBufferSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var bufferRecords = [];\n    var restartOnEmit = false;\n\n    var emit = function emit(record) {\n      var buffer = record.buffer,\n          subs = record.subs;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    var startBuffer = function startBuffer() {\n      if (bufferRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var buffer = [];\n        var record = {\n          buffer: buffer,\n          subs: subs\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, function () {\n          return emit(record);\n        }, bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n    var bufferTimeSubscriber = createOperatorSubscriber(subscriber, function (value) {\n      var recordsCopy = bufferRecords.slice();\n\n      var _iterator = _createForOfIteratorHelper(recordsCopy),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var record = _step.value;\n          var buffer = record.buffer;\n          buffer.push(value);\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }, function () {\n      while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n        subscriber.next(bufferRecords.shift().buffer);\n      }\n\n      bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n      subscriber.complete();\n      subscriber.unsubscribe();\n    }, undefined, function () {\n      return bufferRecords = null;\n    });\n    source.subscribe(bufferTimeSubscriber);\n  });\n}","map":{"version":3,"names":["Subscription","operate","createOperatorSubscriber","arrRemove","asyncScheduler","popScheduler","executeSchedule","bufferTime","bufferTimeSpan","_a","_b","otherArgs","scheduler","bufferCreationInterval","maxBufferSize","Infinity","source","subscriber","bufferRecords","restartOnEmit","emit","record","buffer","subs","unsubscribe","next","startBuffer","add","push","bufferTimeSubscriber","value","recordsCopy","slice","length","shift","complete","undefined","subscribe"],"sources":["C:/minhas-receitas/node_modules/rxjs/dist/esm/internal/operators/bufferTime.js"],"sourcesContent":["import { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function bufferTime(bufferTimeSpan, ...otherArgs) {\n    var _a, _b;\n    const scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    const bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    const maxBufferSize = otherArgs[1] || Infinity;\n    return operate((source, subscriber) => {\n        let bufferRecords = [];\n        let restartOnEmit = false;\n        const emit = (record) => {\n            const { buffer, subs } = record;\n            subs.unsubscribe();\n            arrRemove(bufferRecords, record);\n            subscriber.next(buffer);\n            restartOnEmit && startBuffer();\n        };\n        const startBuffer = () => {\n            if (bufferRecords) {\n                const subs = new Subscription();\n                subscriber.add(subs);\n                const buffer = [];\n                const record = {\n                    buffer,\n                    subs,\n                };\n                bufferRecords.push(record);\n                executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n            }\n        };\n        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n            executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n        }\n        else {\n            restartOnEmit = true;\n        }\n        startBuffer();\n        const bufferTimeSubscriber = createOperatorSubscriber(subscriber, (value) => {\n            const recordsCopy = bufferRecords.slice();\n            for (const record of recordsCopy) {\n                const { buffer } = record;\n                buffer.push(value);\n                maxBufferSize <= buffer.length && emit(record);\n            }\n        }, () => {\n            while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n                subscriber.next(bufferRecords.shift().buffer);\n            }\n            bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n            subscriber.complete();\n            subscriber.unsubscribe();\n        }, undefined, () => (bufferRecords = null));\n        source.subscribe(bufferTimeSubscriber);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}